name: Docker

on:
  push:
    paths-ignore:
      - ".github/workflows/cicd.yml"
      - ".github/workflows/pkg.yml"
      - ".github/workflows/update-packagers.yml"
      - ".github/dependabot.yml"
      - "scripts/test.sh"
      - "templates"
      - ".gitignore"
      - "LICENSE"
      - "*.md"
  pull_request:
    paths-ignore:
      - ".github/workflows/cicd.yml"
      - ".github/workflows/pkg.yml"
      - ".github/workflows/update-packagers.yml"
      - ".github/dependabot.yml"
      - "scripts/test.sh"
      - "templates"
      - ".gitignore"
      - "LICENSE"
      - "*.md"

jobs:
  build-image:
    name: Build image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set docker image tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "DOCKER_TAG=:$(cargo read-manifest | jq -r .version)" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ultram4rine/alerter:latest
            ghcr.io/ultram4rine/alerter:latest
            ultram4rine/alerter${{ env.DOCKER_TAG }}
            ghcr.io/ultram4rine/alerter${{ env.DOCKER_TAG }}
